---
AWSTemplateFormatVersion: '2010-09-09'

#
# This template creates an base NACLs for the specified VPC
#

Description: Create Foundation NACLs

Parameters:
  name:
    Type: String

  privACidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Private Subnet A
    MaxLength: 18
    MinLength: 9
    Type: String

  privBCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Private Subnet B
    MaxLength: 18
    MinLength: 9
    Type: String

  privCCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Private Subnet C
    MaxLength: 18
    MinLength: 9
    Type: String

  pubACidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Public Subnet A
    MaxLength: 18
    MinLength: 9
    Type: String

  pubBCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Public Subnet B
    MaxLength: 18
    MinLength: 9
    Type: String

  pubCCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Public Subnet C
    MaxLength: 18
    MinLength: 9
    Type: String

  restrACidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Restricted Subnet A
    MaxLength: 18
    MinLength: 9
    Type: String

  restrBCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Restricted Subnet B
    MaxLength: 18
    MinLength: 9
    Type: String

  restrCCidr:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: CIDR Range for Restricted Subnet C
    MaxLength: 18
    MinLength: 9
    Type: String

  subnetStackName:
    Type: String
    Description: Name of the CFN Stack which creates the Subnets

  vpcStackName:
    Type: String
    Description: Name of the CFN Stack which creates the VPC

Resources:
  publicSubnetAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
        - Key: Name
          Value: !Ref name
      VpcId:
        Fn::ImportValue: !Sub '${vpcStackName}-vpcId'

  subnetAPublicAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPublicA'
      NetworkAclId: !Ref publicSubnetAcl

  subnetBPublicAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPublicB'
      NetworkAclId: !Ref publicSubnetAcl

  subnetCPublicAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPublicC'
      NetworkAclId: !Ref publicSubnetAcl

  publicInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: false
      Protocol: -1
      RuleAction: allow
      RuleNumber: 999
      NetworkAclId: !Ref publicSubnetAcl
      PortRange:
        From: 0
        To: 65535

  publicOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: true
      Protocol: -1
      RuleAction: allow
      RuleNumber: 999
      NetworkAclId: !Ref publicSubnetAcl
      PortRange:
        From: 0
        To: 65535

  privateSubnetAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
        - Key: Name
          Value: !Ref name
      VpcId:
        Fn::ImportValue: !Sub '${vpcStackName}-vpcId'

  subnetAPrivateAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPrivateA'
      NetworkAclId: !Ref privateSubnetAcl

  subnetBPrivateAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPrivateB'
      NetworkAclId: !Ref privateSubnetAcl

  subnetCPrivateAclAssoc:
    Type: AWS::EC2::SubnetNetworkAclAssociation    
    Properties:
      SubnetId:
        Fn::ImportValue: !Sub '${subnetStackName}-subnetPrivateC'
      NetworkAclId: !Ref privateSubnetAcl

  privateInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: false
      Protocol: -1
      RuleAction: allow
      RuleNumber: 999
      NetworkAclId: !Ref privateSubnetAcl
      PortRange:
        From: 0
        To: 65535

  privateOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: '0.0.0.0/0'
      Egress: true
      Protocol: -1
      RuleAction: allow
      RuleNumber: 999
      NetworkAclId: !Ref privateSubnetAcl
      PortRange:
        From: 0
        To: 65535

#Outputs:
